C51 COMPILER V9.56.0.0   3                                                                 10/29/2019 14:32:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 3
OBJECT MODULE PLACED IN .\Objects\3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\3.lst) 
                    -TABS(2) OBJECT(.\Objects\3.obj)

line level    source

   1          #define   MAIN_Fosc   22118400L //?????
   2          #include  "STC15Fxxxx.H"
   3          #define Timer0_Reload (65536UL -(MAIN_Fosc / 1000))   //Timer 0 ????, 1000?/?
   4          #define DIS_DOT   0x20
   5          #define DIS_BLACK 0x10
   6          #define DIS_    0x11
   7          u8 code t_display[]={           //????
   8          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
   9            0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  10          //black  -     H    J  K    L    N  o   P  U     t    G    Q    r   M    y
  11            0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  12            0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};  //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  13          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};    //??
  14          sbit  P_HC595_SER   = P4^0; //pin 14  SER   data input
  15          sbit  P_HC595_RCLK  = P5^4; //pin 12  RCLk  store (latch) clock
  16          sbit  P_HC595_SRCLK = P4^3; //pin 11  SRCLK Shift data clock
  17          
  18          u8  LED8[8];    //????
  19          u8  display_index;  //?????
  20          bit B_1ms;      //1ms??
  21          u8  KeyCode;  //????????, 1~16??
  22          u8  cnt10ms;
  23          u8 IO_KeyState, IO_KeyState1, IO_KeyHoldCnt;  //??????
  24          u8  cnt50ms;
  25          u8  hour,minute,second; //RTC??
  26          u16 msecond;
  27          void  IO_KeyScan(void); //50ms call
  28          /********************** ?????? ************************/
  29          void  DisplayRTC(void)
  30          {
  31   1        if(hour >= 10)  LED8[0] = hour / 10;
  32   1        else      LED8[0] = DIS_BLACK;
  33   1        LED8[1] = hour % 10;
  34   1        LED8[2] = minute / 10;
  35   1        LED8[3] = minute % 10;
  36   1        if(msecond >= 500)    LED8[1] |= DIS_DOT; //??????????
  37   1      }
  38          /********************** RTC???? ************************/
  39          void  RTC(void)
  40          {
  41   1        if(++second >= 60)
  42   1        {
  43   2          second = 0;
  44   2          if(++minute >= 60)
  45   2          {
  46   3            minute = 0;
  47   3            if(++hour >= 24)  hour = 0;
  48   3          }
  49   2        }
  50   1      }
  51          /**********************************************/
  52          void main(void)
  53          {
  54   1        u8  i;  
C51 COMPILER V9.56.0.0   3                                                                 10/29/2019 14:32:04 PAGE 2   

  55   1        P0M1 = 0; P0M0 = 0; //???????
  56   1        P1M1 = 0; P1M0 = 0; //???????
  57   1        P2M1 = 0; P2M0 = 0; //???????
  58   1        P3M1 = 0; P3M0 = 0; //???????
  59   1        P4M1 = 0; P4M0 = 0; //???????
  60   1        P5M1 = 0; P5M0 = 0; //???????
  61   1        P6M1 = 0; P6M0 = 0; //???????
  62   1        P7M1 = 0; P7M0 = 0; //???????
  63   1        display_index = 0;  
  64   1        AUXR = 0x80;  //Timer0 set as 1T, 16 bits timer auto-reload, 
  65   1        TH0 = (u8)(Timer0_Reload / 256);
  66   1        TL0 = (u8)(Timer0_Reload % 256);
  67   1        ET0 = 1;  //Timer0 interrupt enable
  68   1        TR0 = 1;  //Tiner0 run
  69   1        EA = 1;   //????? 
  70   1        for(i=0; i<8; i++)  LED8[i] = 0x10; //????
  71   1        hour   = 12;  //??????
  72   1        minute = 0;
  73   1        second = 0;
  74   1        DisplayRTC();
  75   1        KeyCode = 0;  //????????, 1~16??
  76   1        cnt10ms = 0;
  77   1        IO_KeyState = 0;
  78   1        IO_KeyState1 = 0;
  79   1        IO_KeyHoldCnt = 0;
  80   1        cnt50ms = 0;  
  81   1        while(1)
  82   1        {
  83   2          if(B_1ms) //1ms?
  84   2          {
  85   3            B_1ms = 0;
  86   3            if(++msecond >= 1000) //1??
  87   3            {
  88   4              msecond = 0;
  89   4              RTC();
  90   4              DisplayRTC();
  91   4            }
  92   3            if(msecond == 500)  DisplayRTC(); //??????????
  93   3            if(++cnt50ms >= 50)   //50ms????????
  94   3            {
  95   4              cnt50ms = 0;
  96   4              IO_KeyScan();
  97   4            }     
  98   3            if(KeyCode > 0)   //????
  99   3            {
 100   4              LED8[6] = (KeyCode-17) / 10;  //????
 101   4              LED8[7] = (KeyCode-17) % 10;  //????
 102   4              if(KeyCode == 17) //hour +1
 103   4              {
 104   5                if(++hour >= 24)  hour = 0;
 105   5                DisplayRTC();
 106   5              }
 107   4              if(KeyCode == 19) //hour -1
 108   4              {
 109   5                if(--hour >= 24)  hour = 23;
 110   5                DisplayRTC();
 111   5              }
 112   4              if(KeyCode == 21) //minute +1
 113   4              {
 114   5                second = 0;
 115   5                if(++minute >= 60)  minute = 0;
 116   5                DisplayRTC();
C51 COMPILER V9.56.0.0   3                                                                 10/29/2019 14:32:04 PAGE 3   

 117   5              }
 118   4              if(KeyCode == 24) //minute -1
 119   4              {
 120   5                second = 0;
 121   5                if(--minute >= 60)  minute = 59;
 122   5                DisplayRTC();
 123   5              }
 124   4              KeyCode = 0;
 125   4            }
 126   3      
 127   3          }
 128   2        }
 129   1      } 
 130          /**********************************************/
 131          /*****************************************************
 132            ???????
 133            ??XY??4x4????,????,???
 134             Y     P04      P05      P06      P07
 135                    |        |        |        |
 136          X         |        |        |        |
 137          P00 ---- K00 ---- K01 ---- K02 ---- K03 ----
 138                    |        |        |        |
 139          P01 ---- K04 ---- K05 ---- K06 ---- K07 ----
 140                    |        |        |        |
 141          P02 ---- K08 ---- K09 ---- K10 ---- K11 ----
 142                    |        |        |        |
 143          P03 ---- K12 ---- K13 ---- K14 ---- K15 ----
 144                    |        |        |        |
 145          ******************************************************/
 146          u8 code T_KeyTable[16] = {0,1,2,0,3,0,0,0,4,0,0,0,0,0,0,0};
 147          void IO_KeyDelay(void)
 148          {
 149   1        u8 i;
 150   1        i = 60;
 151   1        while(--i)  ;
 152   1      }
 153          void  IO_KeyScan(void)  //50ms call
 154          {
 155   1        u8  j;
 156   1        j = IO_KeyState1; //???????
 157   1        P0 = 0xf0;  //X?,?Y
 158   1        IO_KeyDelay();
 159   1        IO_KeyState1 = P0 & 0xf0;
 160   1        P0 = 0x0f;  //Y?,?X
 161   1        IO_KeyDelay();
 162   1        IO_KeyState1 |= (P0 & 0x0f);
 163   1        IO_KeyState1 ^= 0xff; //??  
 164   1        if(j == IO_KeyState1) //???????
 165   1        {
 166   2          j = IO_KeyState;
 167   2          IO_KeyState = IO_KeyState1;
 168   2          if(IO_KeyState != 0)  //????
 169   2          {
 170   3            F0 = 0;
 171   3            if(j == 0)  F0 = 1; //?????
 172   3            else if(j == IO_KeyState)
 173   3            {
 174   4              if(++IO_KeyHoldCnt >= 20) //1????
 175   4              {
 176   5                IO_KeyHoldCnt = 18;
 177   5                F0 = 1;
 178   5              }
C51 COMPILER V9.56.0.0   3                                                                 10/29/2019 14:32:04 PAGE 4   

 179   4            }
 180   3            if(F0)
 181   3            {
 182   4              j = T_KeyTable[IO_KeyState >> 4];
 183   4              if((j != 0) && (T_KeyTable[IO_KeyState& 0x0f] != 0)) 
 184   4                KeyCode = (j - 1) * 4 + T_KeyTable[IO_KeyState & 0x0f] + 16;  //????,17~32
 185   4            }
 186   3          }
 187   2          else  IO_KeyHoldCnt = 0;
 188   2        }
 189   1        P0 = 0xff;
 190   1      }
 191          /**************** ?HC595???????? ******************/
 192          void Send_595(u8 dat)
 193          {   
 194   1        u8  i;
 195   1        for(i=0; i<8; i++)
 196   1        {
 197   2          dat <<= 1;
 198   2          P_HC595_SER   = CY;
 199   2          P_HC595_SRCLK = 1;
 200   2          P_HC595_SRCLK = 0;
 201   2        }
 202   1      }
 203          /********************** ?????? ************************/
 204          void DisplayScan(void)
 205          { 
 206   1        Send_595(~T_COM[display_index]);        //????
 207   1        Send_595(t_display[LED8[display_index]]); //????
 208   1        P_HC595_RCLK = 1;
 209   1        P_HC595_RCLK = 0;             //??????
 210   1        if(++display_index >= 8)  display_index = 0;  //8????0
 211   1      }
 212          /********************** Timer0 1ms???? ************************/
 213          void timer0 (void) interrupt TIMER0_VECTOR
 214          {
 215   1        DisplayScan();  //1ms??????
 216   1        B_1ms = 1;    //1ms??
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    591    ----
   CONSTANT SIZE    =     67    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
