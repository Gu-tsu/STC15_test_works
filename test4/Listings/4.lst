C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 4
OBJECT MODULE PLACED IN .\Objects\4.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 4.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\4.lst) 
                    -TABS(2) OBJECT(.\Objects\4.obj)

line level    source

   1          #define   MAIN_Fosc   22118400L //?????
   2          #include  "STC15Fxxxx.H"
   3          /****************************** ????? ***********************************/
   4          #define Timer0_Reload (65536UL -(MAIN_Fosc / 1000))   //Timer 0 ????, 1000?/?
   5          /*****************************************************************************/
   6          #define DIS_DOT   0x20
   7          #define DIS_BLACK 0x10
   8          #define DIS_    0x11
   9          /*************  ??????  **************/
  10          u8 code t_display[]={           //????
  11          //   0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F
  12            0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,
  13          //black  -     H    J  K    L    N  o   P  U     t    G    Q    r   M    y
  14            0x00,0x40,0x76,0x1E,0x70,0x38,0x37,0x5C,0x73,0x3E,0x78,0x3d,0x67,0x50,0x37,0x6e,
  15            0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};  //0. 1. 2. 3. 4. 5. 6. 7. 8. 9. -1
  16          
  17          u8 code T_COM[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};    //??
  18          
  19          
  20          /*************  IO??? **************/
  21          sbit  P_HC595_SER   = P4^0; //pin 14  SER   data input
  22          sbit  P_HC595_RCLK  = P5^4; //pin 12  RCLk  store (latch) clock
  23          sbit  P_HC595_SRCLK = P4^3; //pin 11  SRCLK Shift data clock
  24          
  25          
  26          /*************  ??????  **************/
  27          
  28          u8  LED8[8];    //????
  29          u8  display_index;  //?????
  30          bit B_1ms;      //1ms??
  31          
  32          u16 msecond;
  33          
  34          /*************  ??????  **************/
  35          u16 get_temperature(u16 adc);
  36          u16 Get_ADC10bitResult(u8 channel); //channel = 0~7
  37          
  38          /**********************************************/
  39          void main(void)
  40          {
  41   1        u8  i;
  42   1        u16 j;
  43   1        
  44   1        P0M1 = 0; P0M0 = 0; //???????
  45   1        P1M1 = 0; P1M0 = 0; //???????
  46   1        P2M1 = 0; P2M0 = 0; //???????
  47   1        P3M1 = 0; P3M0 = 0; //???????
  48   1        P4M1 = 0; P4M0 = 0; //???????
  49   1        P5M1 = 0; P5M0 = 0; //???????
  50   1        P6M1 = 0; P6M0 = 0; //???????
  51   1        P7M1 = 0; P7M0 = 0; //???????
  52   1        display_index = 0;
  53   1        P1ASF = 0x0C;   //P1.2 P1.3?ADC
  54   1        ADC_CONTR = 0xE0; //90T, ADC power on
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 2   

  55   1        
  56   1        AUXR = 0x80;  //Timer0 set as 1T, 16 bits timer auto-reload, 
  57   1        TH0 = (u8)(Timer0_Reload / 256);
  58   1        TL0 = (u8)(Timer0_Reload % 256);
  59   1        ET0 = 1;  //Timer0 interrupt enable
  60   1        TR0 = 1;  //Tiner0 run
  61   1        EA = 1;   //?????
  62   1        
  63   1        for(i=0; i<8; i++)  LED8[i] = 0x10; //????
  64   1        
  65   1        while(1)
  66   1        {
  67   2          if(B_1ms) //1ms?
  68   2          {
  69   3            B_1ms = 0;
  70   3            if(++msecond >= 300)  //300ms?
  71   3            {
  72   4              msecond = 0;
  73   4              j = Get_ADC10bitResult(2);  //??0~7,???????ADC, ???????, == 1024 ???
  74   4              
  75   4              if(j < 1024)
  76   4              {
  77   5                LED8[0] = j / 1000;   //??ADC?
  78   5                LED8[1] = (j % 1000) / 100;
  79   5                LED8[2] = (j % 100) / 10;
  80   5                LED8[3] = j % 10;
  81   5                if(LED8[0] == 0)  LED8[0] = DIS_BLACK;
  82   5              }
  83   4              else  //??
  84   4              {
  85   5                for(i=0; i<4; i++)  LED8[i] = DIS_;
  86   5              }
  87   4              
  88   4              j = Get_ADC10bitResult(3);  //??0~7,???????ADC, ???????, == 1024 ???
  89   4              j += Get_ADC10bitResult(3);
  90   4              j += Get_ADC10bitResult(3);
  91   4              j += Get_ADC10bitResult(3);
  92   4      
  93   4              if(j < 1024*4)
  94   4              {
  95   5              /*
  96   5                LED8[0] = j / 1000;   //??ADC?
  97   5                LED8[1] = (j % 1000) / 100;
  98   5                LED8[2] = (j % 100) / 10;
  99   5                LED8[3] = j % 10;
 100   5                if(LED8[0] == 0)  LED8[0] = DIS_BLACK;
 101   5              */
 102   5                j = get_temperature(j); //?????
 103   5      
 104   5                if(j >= 400)  F0 = 0, j -= 400;   //?? >= 0?
 105   5                else      F0 = 1, j  = 400 - j; //?? <  0?
 106   5                LED8[4] = j / 1000;   //?????
 107   5                LED8[5] = (j % 1000) / 100;
 108   5                LED8[6] = (j % 100) / 10 + DIS_DOT;
 109   5                LED8[7] = j % 10;
 110   5                if(LED8[4] == 0)  LED8[4] = DIS_BLACK;
 111   5                if(F0)  LED8[4] = DIS_;   //??-
 112   5              }
 113   4              else  //??
 114   4              {
 115   5                for(i=0; i<8; i++)  LED8[i] = DIS_;
 116   5              }
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 3   

 117   4            }
 118   3      
 119   3          }
 120   2        }
 121   1      } 
 122          /**********************************************/
 123          //========================================================================
 124          // ??: u16  Get_ADC10bitResult(u8 channel)
 125          // ??: ??????ADC??.
 126          // ??: channel: ??????ADC.
 127          // ??: 10?ADC??.
 128          // ??: V1.0, 2012-10-22
 129          //========================================================================
 130          u16 Get_ADC10bitResult(u8 channel)  //channel = 0~7
 131          {
 132   1        ADC_RES = 0;
 133   1        ADC_RESL = 0;
 134   1      
 135   1        ADC_CONTR = (ADC_CONTR & 0xe0) | 0x08 | channel;  //start the ADC
 136   1        NOP(4);
 137   1      
 138   1        while((ADC_CONTR & 0x10) == 0)  ; //wait for ADC finish
 139   1        ADC_CONTR &= ~0x10;   //??ADC????
 140   1        return  (((u16)ADC_RES << 2) | (ADC_RESL & 3));
 141   1      }
 142          //  MF52E 10K at 25, B = 3950, ADC = 12 bits
 143          u16 code temp_table[]={
 144              140,  //;-40  0
 145              149,  //;-39  1
 146              159,  //;-38  2
 147              168,  //;-37  3
 148              178,  //;-36  4
 149              188,  //;-35  5
 150              199,  //;-34  6
 151              210,  //;-33  7
 152              222,  //;-32  8
 153              233,  //;-31  9
 154              246,  //;-30  10
 155              259,  //;-29  11
 156              272,  //;-28  12
 157              286,  //;-27  13
 158              301,  //;-26  14
 159              317,  //;-25  15
 160              333,  //;-24  16
 161              349,  //;-23  17
 162              367,  //;-22  18
 163              385,  //;-21  19
 164              403,  //;-20  20
 165              423,  //;-19  21
 166              443,  //;-18  22
 167              464,  //;-17  23
 168              486,  //;-16  24
 169              509,  //;-15  25
 170              533,  //;-14  26
 171              558,  //;-13  27
 172              583,  //;-12  28
 173              610,  //;-11  29
 174              638,  //;-10  30
 175              667,  //;-9 31
 176              696,  //;-8 32
 177              727,  //;-7 33
 178              758,  //;-6 34
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 4   

 179              791,  //;-5 35
 180              824,  //;-4 36
 181              858,  //;-3 37
 182              893,  //;-2 38
 183              929,  //;-1 39
 184              965,  //;0  40
 185              1003, //;1  41
 186              1041, //;2  42
 187              1080, //;3  43
 188              1119, //;4  44
 189              1160, //;5  45
 190              1201, //;6  46
 191              1243, //;7  47
 192              1285, //;8  48
 193              1328, //;9  49
 194              1371, //;10 50
 195              1414, //;11 51
 196              1459, //;12 52
 197              1503, //;13 53
 198              1548, //;14 54
 199              1593, //;15 55
 200              1638, //;16 56
 201              1684, //;17 57
 202              1730, //;18 58
 203              1775, //;19 59
 204              1821, //;20 60
 205              1867, //;21 61
 206              1912, //;22 62
 207              1958, //;23 63
 208              2003, //;24 64
 209              2048, //;25 65
 210              2093, //;26 66
 211              2137, //;27 67
 212              2182, //;28 68
 213              2225, //;29 69
 214              2269, //;30 70
 215              2312, //;31 71
 216              2354, //;32 72
 217              2397, //;33 73
 218              2438, //;34 74
 219              2479, //;35 75
 220              2519, //;36 76
 221              2559, //;37 77
 222              2598, //;38 78
 223              2637, //;39 79
 224              2675, //;40 80
 225              2712, //;41 81
 226              2748, //;42 82
 227              2784, //;43 83
 228              2819, //;44 84
 229              2853, //;45 85
 230              2887, //;46 86
 231              2920, //;47 87
 232              2952, //;48 88
 233              2984, //;49 89
 234              3014, //;50 90
 235              3044, //;51 91
 236              3073, //;52 92
 237              3102, //;53 93
 238              3130, //;54 94
 239              3157, //;55 95
 240              3183, //;56 96
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 5   

 241              3209, //;57 97
 242              3234, //;58 98
 243              3259, //;59 99
 244              3283, //;60 100
 245              3306, //;61 101
 246              3328, //;62 102
 247              3351, //;63 103
 248              3372, //;64 104
 249              3393, //;65 105
 250              3413, //;66 106
 251              3432, //;67 107
 252              3452, //;68 108
 253              3470, //;69 109
 254              3488, //;70 110
 255              3506, //;71 111
 256              3523, //;72 112
 257              3539, //;73 113
 258              3555, //;74 114
 259              3571, //;75 115
 260              3586, //;76 116
 261              3601, //;77 117
 262              3615, //;78 118
 263              3628, //;79 119
 264              3642, //;80 120
 265              3655, //;81 121
 266              3667, //;82 122
 267              3679, //;83 123
 268              3691, //;84 124
 269              3702, //;85 125
 270              3714, //;86 126
 271              3724, //;87 127
 272              3735, //;88 128
 273              3745, //;89 129
 274              3754, //;90 130
 275              3764, //;91 131
 276              3773, //;92 132
 277              3782, //;93 133
 278              3791, //;94 134
 279              3799, //;95 135
 280              3807, //;96 136
 281              3815, //;97 137
 282              3822, //;98 138
 283              3830, //;99 139
 284              3837, //;100  140
 285              3844, //;101  141
 286              3850, //;102  142
 287              3857, //;103  143
 288              3863, //;104  144
 289              3869, //;105  145
 290              3875, //;106  146
 291              3881, //;107  147
 292              3887, //;108  148
 293              3892, //;109  149
 294              3897, //;110  150
 295              3902, //;111  151
 296              3907, //;112  152
 297              3912, //;113  153
 298              3917, //;114  154
 299              3921, //;115  155
 300              3926, //;116  156
 301              3930, //;117  157
 302              3934, //;118  158
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 6   

 303              3938, //;119  159
 304              3942  //;120  160
 305          };
 306          
 307          /********************  ???? ***********************************************/
 308          // ????: 0??-40.0?, 400??0?, 625??25.0?, ??1600??120.0?. 
 309          // ????, ADC???12bit?ADC?.
 310          // ?????????: Coody
 311          /**********************************************/
 312          #define   D_SCALE   10    //??????, ??10?????????
 313          u16 get_temperature(u16 adc)
 314          {
 315   1        u16 code *p;
 316   1        u16 i;
 317   1        u8  j,k,min,max;
 318   1        
 319   1        adc = 4096 - adc; //Rt??
 320   1        p = temp_table;
 321   1        if(adc < p[0])    return (0xfffe);
 322   1        if(adc > p[160])  return (0xffff);
 323   1        
 324   1        min = 0;    //-40?
 325   1        max = 160;    //120?
 326   1      
 327   1        for(j=0; j<5; j++)  //????
 328   1        {
 329   2          k = min / 2 + max / 2;
 330   2          if(adc <= p[k]) max = k;
 331   2          else      min = k;
 332   2        }
 333   1           if(adc == p[min])  i = min * D_SCALE;
 334   1        else if(adc == p[max])  i = max * D_SCALE;
 335   1        else  // min < temp < max
 336   1        {
 337   2          while(min <= max)
 338   2          {
 339   3            min++;
 340   3            if(adc == p[min]) {i = min * D_SCALE; break;}
 341   3            else if(adc < p[min])
 342   3            {
 343   4              min--;
 344   4              i = p[min]; //min
 345   4              j = (adc - i) * D_SCALE / (p[min+1] - i);
 346   4              i = min;
 347   4              i *= D_SCALE;
 348   4              i += j;
 349   4              break;
 350   4            }
 351   3          }
 352   2        }
 353   1        return i;
 354   1      }
 355          /**************** ?HC595???????? ******************/
 356          void Send_595(u8 dat)
 357          {   
 358   1        u8  i;
 359   1        for(i=0; i<8; i++)
 360   1        {
 361   2          dat <<= 1;
 362   2          P_HC595_SER   = CY;
 363   2          P_HC595_SRCLK = 1;
 364   2          P_HC595_SRCLK = 0;
C51 COMPILER V9.56.0.0   4                                                                 11/05/2019 18:47:39 PAGE 7   

 365   2        }
 366   1      }
 367          /********************** ?????? ************************/
 368          void DisplayScan(void)
 369          { 
 370   1        Send_595(~T_COM[display_index]);        //????
 371   1        Send_595(t_display[LED8[display_index]]); //????
 372   1        P_HC595_RCLK = 1;
 373   1        P_HC595_RCLK = 0;             //??????
 374   1        if(++display_index >= 8)  display_index = 0;  //8????0
 375   1      }
 376          /********************** Timer0 1ms???? ************************/
 377          void timer0 (void) interrupt TIMER0_VECTOR
 378          {
 379   1        DisplayScan();  //1ms??????
 380   1        B_1ms = 1;    //1ms??
 381   1      }
 382          
 383           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    964    ----
   CONSTANT SIZE    =    373    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
